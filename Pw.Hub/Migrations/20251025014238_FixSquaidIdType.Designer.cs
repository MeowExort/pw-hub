// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pw.Hub.Infrastructure;

#nullable disable

namespace Pw.Hub.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251025014238_FixSquaidIdType")]
    partial class FixSquaidIdType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("Pw.Hub.Models.Account", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageSource")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastVisit")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("OrderIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<string>("SiteId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("SquadId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SquadId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Pw.Hub.Models.AccountCharacter", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("OptionId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("ServerId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ServerId");

                    b.ToTable("AccountCharacter");
                });

            modelBuilder.Entity("Pw.Hub.Models.AccountServer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountId")
                        .HasColumnType("TEXT");

                    b.Property<string>("DefaultCharacterOptionId")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("OptionId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("AccountServer");
                });

            modelBuilder.Entity("Pw.Hub.Models.Squad", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("OrderIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("Squads");
                });

            modelBuilder.Entity("Pw.Hub.Models.Account", b =>
                {
                    b.HasOne("Pw.Hub.Models.Squad", "Squad")
                        .WithMany("Accounts")
                        .HasForeignKey("SquadId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Squad");
                });

            modelBuilder.Entity("Pw.Hub.Models.AccountCharacter", b =>
                {
                    b.HasOne("Pw.Hub.Models.AccountServer", "Server")
                        .WithMany("Characters")
                        .HasForeignKey("ServerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Server");
                });

            modelBuilder.Entity("Pw.Hub.Models.AccountServer", b =>
                {
                    b.HasOne("Pw.Hub.Models.Account", "Account")
                        .WithMany("Servers")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Pw.Hub.Models.Account", b =>
                {
                    b.Navigation("Servers");
                });

            modelBuilder.Entity("Pw.Hub.Models.AccountServer", b =>
                {
                    b.Navigation("Characters");
                });

            modelBuilder.Entity("Pw.Hub.Models.Squad", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
